/*! For license information please see photos-src_components_Faces_FaceCover_vue.js.LICENSE.txt */
"use strict";(self.webpackChunkphotos=self.webpackChunkphotos||[]).push([["src_components_Faces_FaceCover_vue"],{46116:(e,t,a)=>{a.d(t,{Z:()=>i});const i={name:"FaceCoverMixin",computed:{...(0,a(20629).Se)(["faces","facesFiles","files"])},methods:{getFaceCover(e){const t=e=>Math.max(0,-1*(e.x-.5*e.width))+Math.max(0,-1*(e.y-.5*e.height))+Math.max(0,-1*(1-(e.x+e.width)-.5*e.width))+Math.max(0,-1*(1-(e.y+e.height)-.5*e.height));return(this.facesFiles[e]||[]).slice(0,25).map((e=>this.files[e])).sort(((t,a)=>a.faceDetections.find((t=>t.title===e)).width-t.faceDetections.find((t=>t.title===e)).width)).sort(((e,t)=>e.faceDetections.length-t.faceDetections.length)).sort(((a,i)=>t(a.faceDetections.find((t=>t.title===e)))-t(i.faceDetections.find((t=>t.title===e)))))[0]},getCoverStyle(e){const t=this.getFaceCover(e);if(!t)return{};const a=t.faceDetections.find((t=>t.title===e)),i=Math.max(1,1/a.width*.4),s=100*(a.x+a.width/2),n=100*(a.y+a.height/2);return{width:"100%",transform:"translate(calc( var(--photos-face-width)/2 - ".concat(s,"% ), calc( var(--photos-face-width)/2 - ").concat(n,"% )) scale(").concat(i,")"),transformOrigin:"".concat(s,"% ").concat(n,"%")}}}}},99751:(e,a,i)=>{i.d(a,{Z:()=>p});var s=i(20629),n=i(82880),o=i(45994),c=i(81067),r=i(59537),l=i(2161),d=i(94236),h=i(69363),A=i(86492),f=i.n(A);const p={name:"FetchFacesMixin",data:()=>({errorFetchingFaces:null,loadingFaces:!1,errorFetchingFiles:null,loadingFiles:!1}),mixins:[h.Z],async beforeMount(){this.fetchFaces()},computed:{...(0,s.Se)(["faces"])},methods:{...(0,s.nv)(["appendFiles"]),async fetchFaces(){if(!this.loadingFaces&&!Object.keys(this.faces).length)try{var e;this.loadingFaces=!0,this.errorFetchingFaces=null;const{data:t}=await c.ZP.getDirectoryContents("/recognize/".concat(null===(e=(0,o.ts)())||void 0===e?void 0:e.uid,"/faces/"),{data:l.Z,details:!0,signal:this.abortController.signal});this.$store.dispatch("addFaces",{faces:t}),r.Z.debug("[FetchFacesMixin] Fetched ".concat(t.length," new faces: "),t)}catch(e){e.response&&e.response.status&&(404===e.response.status?this.errorFetchingFaces=404:this.errorFetchingFaces=e),r.Z.error(t("photos","Failed to fetch faces list."),{error:e}),(0,n.x2)(t("photos","Failed to fetch faces list."))}finally{this.loadingFaces=!1}},async fetchFaceContent(e,t){if(!this.loadingFiles&&(t||!this.facesFiles[e]||!this.facesFiles[e].length))try{var a;this.errorFetchingFiles=null,this.loadingFiles=!0;const{data:t}=await c.ZP.getDirectoryContents("/recognize/".concat(null===(a=(0,o.ts)())||void 0===a?void 0:a.uid,"/faces/").concat(e),{data:l.Z,details:!0,signal:this.abortController.signal}),i=[],s=[];for(const e of t){const t=(0,d.AX)(e);t.filename=f().decode(t.realpath).replace("/".concat((0,o.ts)().uid,"/files"),"/files/".concat((0,o.ts)().uid)),t.faceDetections=JSON.parse(f().decode(t.faceDetections)),i.push(t),s.push(String(t.fileid))}this.appendFiles(i),t.length>0&&await this.$store.commit("addFilesToFace",{faceName:e,fileIdsToAdd:s}),r.Z.debug("[FetchFacesMixin] Fetched ".concat(s.length," new files: "),s)}catch(e){e.response&&e.response.status&&(404===e.response.status?this.errorFetchingFiles=404:this.errorFetchingFiles=e),r.Z.error("Error fetching face files",{error:e})}finally{this.loadingFiles=!1}},async fetchUnassignedFaces(e){if(!this.loadingFiles&&(e||!this.unassignedFiles||!this.unassignedFiles.length))try{var t;this.errorFetchingFiles=null,this.loadingFiles=!0;let{data:e}=await c.ZP.getDirectoryContents("/recognize/".concat(null===(t=(0,o.ts)())||void 0===t?void 0:t.uid,"/unassigned-faces"),{data:l.Z,details:!0,signal:this.abortController.signal});e=e.map((e=>(0,d.AX)(e))).map((e=>({...e,filename:f().decode(e.realpath).replace("/".concat((0,o.ts)().uid,"/files"),"/files/".concat((0,o.ts)().uid))}))).map((e=>({...e,faceDetections:JSON.parse(f().decode(e.faceDetections))})));const a=e.map((e=>""+e.fileid));this.appendFiles(e),e.length>0&&await this.$store.commit("addUnassignedFiles",{fileIdsToAdd:a}),r.Z.debug("[FetchFacesMixin] Fetched ".concat(a.length," new unassigned files: "),a)}catch(e){e.response&&e.response.status&&(404===e.response.status?this.errorFetchingFiles=404:this.errorFetchingFiles=e),r.Z.error("Error fetching unassigned files",{error:e})}finally{this.loadingFiles=!1}},async fetchUnassignedFacesCount(){try{var e;const{data:t}=await c.ZP.stat("/recognize/".concat(null===(e=(0,o.ts)())||void 0===e?void 0:e.uid,"/unassigned-faces"),{data:l.Z,details:!0,signal:this.abortController.signal}),a=Number(t.props.nbItems);await this.$store.commit("setUnassignedFilesCount",a),r.Z.debug("[FetchFacesMixin] Fetched unassigned files count: ",a)}catch(e){r.Z.error("Error fetching unassigned files count",{error:e})}}}}},32737:(e,t,a)=>{a.d(t,{Z:()=>c});var i=a(87537),s=a.n(i),n=a(23645),o=a.n(n)()(s());o.push([e.id,".face-cover[data-v-09cf3032]{display:flex;flex-direction:column;padding:10px;border-radius:var(--border-radius-large)}.face-cover__crop-container[data-v-09cf3032]{overflow:hidden;width:128px;height:128px;border-radius:128px;position:relative;background:var(--color-background-darker);--photos-face-width: 128px}@media only screen and (max-width: 1020px){.face-cover__crop-container[data-v-09cf3032]{width:95px;height:95px;--photos-face-width: 95px}}.face-cover[data-v-09cf3032]:hover,.face-cover[data-v-09cf3032]:focus{background:var(--color-background-hover)}.face-cover__details[data-v-09cf3032]{display:flex;flex-direction:column;width:128px;margin-top:4px;text-align:center}@media only screen and (max-width: 1020px){.face-cover__details[data-v-09cf3032]{width:95px}}.face-cover__details__first-line[data-v-09cf3032]{display:flex;height:2em;overflow:hidden;text-overflow:ellipsis}.face-cover__details__second-line[data-v-09cf3032]{margin-top:6px;color:var(--color-text-maxcontrast)}.face-cover__details__name[data-v-09cf3032]{flex-grow:1;margin:0}.face-cover--small *[data-v-09cf3032]{font-size:15px !important}.face-cover--small .face-cover__details[data-v-09cf3032]{width:60px !important}.face-cover--small .face-cover__crop-container[data-v-09cf3032]{width:60px !important;height:60px !important;--photos-face-width: 60px !important}","",{version:3,sources:["webpack://./src/mixins/FaceCover.scss"],names:[],mappings:"AAqBA,6BACC,YAAA,CACA,qBAAA,CACA,YAAA,CACA,wCAAA,CAEA,6CACC,eAAA,CACA,WAAA,CACA,YAAA,CACA,mBAAA,CACA,iBAAA,CACA,yCAAA,CACA,0BAAA,CAEA,2CATD,6CAUE,UAAA,CACA,WAAA,CACA,yBAAA,CAAA,CAIF,sEACC,wCAAA,CAGD,sCACC,YAAA,CACA,qBAAA,CACA,WAAA,CACA,cAAA,CACA,iBAAA,CAEA,2CAPD,sCAQE,UAAA,CAAA,CAGD,kDACC,YAAA,CACA,UAAA,CACA,eAAA,CACA,sBAAA,CAGD,mDACC,cAAA,CACA,mCAAA,CAGD,4CACC,WAAA,CACA,QAAA,CAMF,sCACC,yBAAA,CAED,yDACC,qBAAA,CAED,gEACC,qBAAA,CACA,sBAAA,CACA,oCAAA",sourcesContent:["/**\n * @copyright Copyright (c) 2023 Marcel Klehr <mklehr@gmx.net>\n *\n * @author Marcel Klehr <mklehr@gmx.net>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n.face-cover {\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 10px;\n\tborder-radius: var(--border-radius-large);\n\n\t&__crop-container {\n\t\toverflow: hidden;\n\t\twidth: 128px;\n\t\theight: 128px;\n\t\tborder-radius: 128px;\n\t\tposition: relative;\n\t\tbackground: var(--color-background-darker);\n\t\t--photos-face-width: 128px;\n\n\t\t@media only screen and (max-width: 1020px) {\n\t\t\twidth: 95px;\n\t\t\theight: 95px;\n\t\t\t--photos-face-width: 95px;\n\t\t}\n\t}\n\n\t&:hover, &:focus {\n\t\tbackground: var(--color-background-hover);\n\t}\n\n\t&__details {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\twidth: 128px;\n\t\tmargin-top: 4px;\n\t\ttext-align: center;\n\n\t\t@media only screen and (max-width: 1020px) {\n\t\t\twidth: 95px;\n\t\t}\n\n\t\t&__first-line {\n\t\t\tdisplay: flex;\n\t\t\theight: 2em;\n\t\t\toverflow: hidden;\n\t\t\ttext-overflow: ellipsis;\n\t\t}\n\n\t\t&__second-line {\n\t\t\tmargin-top: 6px;\n\t\t\tcolor: var(--color-text-maxcontrast);\n\t\t}\n\n\t\t&__name {\n\t\t\tflex-grow: 1;\n\t\t\tmargin: 0;\n\t\t}\n\t}\n}\n\n.face-cover--small {\n\t* {\n\t\tfont-size: 15px !important;\n\t}\n\t.face-cover__details {\n\t\twidth: 60px !important;\n\t}\n\t.face-cover__crop-container {\n\t\twidth: 60px !important;\n\t\theight: 60px !important;\n\t\t--photos-face-width: 60px !important;\n\t}\n}"],sourceRoot:""}]);const c=o},2295:(e,t,a)=>{a.d(t,{Z:()=>_});var i=a(20629),s=a(79753),n=a(99751),o=a(46116);const c={name:"FaceCover",mixins:[n.Z,o.Z],props:{baseName:{type:String,required:!0},small:{type:Boolean,default:!1}},data:()=>({observer:null}),computed:{...(0,i.Se)(["files","faces","facesFiles"]),face(){return this.faces[this.baseName]},coverUrl(){return this.cover?(0,s.generateUrl)("/apps/photos/api/v1/preview/".concat(this.cover.fileid,"?x=",512,"&y=",512)):""},cover(){return this.getFaceCover(this.face.basename)},coverDimensions(){return this.cover?this.getCoverStyle(this.face.basename):{}}},async mounted(){this.waitForVisible(this.$el,(e=>{this.facesFiles[this.face.basename]||this.fetchFiles()}))},beforeDestroy(){this.observer.disconnect()},methods:{async fetchFiles(){await this.fetchFaceContent(this.face.basename)},waitForVisible(e,t){this.observer=new IntersectionObserver(((e,a)=>{e.forEach((e=>{e.intersectionRatio>0&&(t(),a.disconnect())}))})),this.observer.observe(e)}}};var r=a(93379),l=a.n(r),d=a(7795),h=a.n(d),A=a(90569),f=a.n(A),p=a(3565),g=a.n(p),C=a(19216),v=a.n(C),m=a(44589),u=a.n(m),F=a(32737),x={};x.styleTagTransform=u(),x.setAttributes=g(),x.insert=f().bind(null,"head"),x.domAPI=h(),x.insertStyleElement=v();l()(F.Z,x);F.Z&&F.Z.locals&&F.Z.locals;const _=(0,a(51900).Z)(c,(function(){var e=this,t=e._self._c;return t("div",{class:["face-cover",e.small&&"face-cover--small"],on:{click:function(t){return e.$emit("click")}}},[t("div",{staticClass:"face-cover__crop-container"},[t("img",{ref:"image",staticClass:"face-cover__image",style:e.coverDimensions,attrs:{src:e.coverUrl}})]),e._v(" "),t("div",{staticClass:"face-cover__details"},[e.baseName.match(/^[0-9]+$/)?e._e():t("div",{staticClass:"face-cover__details__first-line"},[t("h2",{staticClass:"face-cover__details__name"},[e._v("\n\t\t\t\t"+e._s(e.baseName)+"\n\t\t\t")])]),e._v(" "),e.facesFiles[e.baseName]&&!e.small?t("div",{staticClass:"face-cover__details__second-line"},[e._v("\n\t\t\t"+e._s(e.n("photos","%n photos","%n photos",e.facesFiles[e.baseName].length))+"\n\t\t")]):e._e()])])}),[],!1,null,"09cf3032",null).exports}}]);
//# sourceMappingURL=photos-src_components_Faces_FaceCover_vue.js.map?v=58cd2f87c4bc819d53fe